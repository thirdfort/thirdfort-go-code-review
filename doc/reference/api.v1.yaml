openapi: 3.0.0
info:
  version: 1.0.0
  title: Consumer API
servers:
  - url: 'https://consumer-api.thirdfort.io/v1'
paths:
  '/transactions/{id}/tasks':
    get:
      summary: Get tasks of transaction
      operationId: getTasksByTxnId
      tags:
        - transactions
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the transaction
          schema:
            type: string
      responses:
        '200':
          description: List of tasks associated with the transaction
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Error'
      description: 'Retrieves all tasks belonging to transaction with id `{id}`.'
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: Platform-API ID of the transaction
  '/tasks/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: ID of the task
    get:
      summary: Get task
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Error'
      operationId: get-tasks-id
      description: 'Retrieve the task with id `{id}`.'
    put:
      summary: Update task
      operationId: put-tasks-id
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      description: Update the task by submitting data for its expectation(s).
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: Body depends on the structure of the expectation(s) associated with the task
            examples:
              '`personal_information` task':
                value:
                  first: Homer
                  last: Simpson
                  other: Jay
                  dob: '2023-11-28T15:25:16.466429Z'
              '`address`':
                value:
                  building_number: '196'
                  country: GBR
                  postcode: HU5 5JW
                  street: Willerby Road
                  town: Hull
        description: ''
components:
  schemas:
    Error:
      type: object
      properties:
        message:
          type: string
    Expectation:
      description: Expectation as stored in checks-engine
      type: object
      required:
        - id
        - name
      properties:
        data:
          type: object
        id:
          type: string
        metadata:
          type: object
          $ref: '#/components/schemas/Metadata'
        name:
          type: string
          enum:
            - 'documents:identity'
            - 'iproov:biometrics'
            - dob
            - nfc
            - name
            - 'onfido:capture:documents'
            - 'questionnaire:sof'
            - 'truelayer:code'
            - property
            - 'documents:bank-statement'
            - 'onfido:capture:video'
            - address
            - 'documents:poa'
            - 'questionnaire:sof-giftor'
            - gift
            - 'documents:poo'
            - company
            - ni-number
            - nationality
            - 'documents:mortgage'
            - 'documents:savings'
            - 'documents:inheritance'
            - 'documents:divorce'
            - 'documents:sale-assets'
        status:
          type: string
          enum:
            - complete
            - pending
            - rejected
            - error
    Metadata:
      description: Metadata of expectation as stored in checks-engine
      type: object
      properties:
        check_id:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    Task:
      type: object
      properties:
        name:
          type: string
          description: 'Unique consumer-api name as task to expectation mapping is not 1:1'
        id:
          type: string
        status:
          type: string
          enum:
            - pending
            - complete
            - rejected
            - error
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        transaction_id:
          type: string
          description: Platform-API ID of the transaction to which the task belongs
        data:
          type: string
          description: 'ID of the record in the table (with the name `name`) that stores the specific data of the task '
